{"version":3,"file":"game.js","sourceRoot":"","sources":["src/game.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;;;;;;AAEH,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAC1D,OAAO,4BAA4B,CAAC;AACpC,OAAO,0BAA0B,CAAC;AAClC,OAAO,4BAA4B,CAAC;AAEpC,OAAO,EAAE,eAAe,EAAE,MAAM,cAAc,CAAC;AAE/C;;;;;;GAMG;AAEH,IAAa,IAAI,GAAjB,MAAa,IAAK,SAAQ,UAAU;IA+ClC;QACE,KAAK,EAAE,CAAC;QAtCV;;WAEG;QAEF,UAAK,GAAG,IAAI,KAAK,EAAE,CAAC;QAGrB;;WAEG;QAEH,UAAK,GAAG,CAAC,CAAC;QA4BR,IAAI,CAAC,KAAK,GAAG,eAA8B,CAAC;IAC9C,CAAC;IA3BQ,MAAM;QACb,OAAO,IAAI,CAAA;;;;;;iCAMkB,IAAI,CAAC,KAAK;;;;;;KAMtC,CAAC;IACJ,CAAC;IAED;;;OAGG;IACH,QAAQ,CAAC,IAAY;QACnB,OAAO,UAAU,IAAI,EAAE,CAAC;IAC1B,CAAC;IAOkB,gBAAgB;QACjC,OAAO,IAAI,CAAC;IACd,CAAC;CACF,CAAA;AAtDiB,WAAM,GAAG,GAAG,CAAA;;;;;;;GAO1B,CAAA;AAMD;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;mCACP;AAOrB;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;mCACf;AArBC,IAAI;IADhB,aAAa,CAAC,aAAa,CAAC;GAChB,IAAI,CAuDhB;SAvDY,IAAI","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {LitElement, html, css} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\nimport \"./components/header/header\";\nimport \"./components/board/board\";\nimport \"./components/footer/footer\";\nimport { Card } from './interfaces/card.interface';\nimport { cardCollecction } from './data/cards';\n\n/**\n * An example element.\n *\n * @fires count-changed - Indicates when the count changes\n * @slot - This element has a slot\n * @csspart button - The button\n */\n@customElement('memory-game')\nexport class Game extends LitElement {\n  static override styles = css`\n    :host {\n      display: block;\n      border: solid 1px gray;\n      padding: 16px;\n      max-width: 800px;\n    }\n  `;\n\n  /**\n   * The name to say \"Hello\" to.\n   */\n   @property({ type: Object })\n   items = new Array();\n\n\n  /**\n   * The number of times the button has been clicked.\n   */\n  @property({type: Number})\n  count = 0;\n\n  override render() {\n    return html`\n     <div class=\"grid-container\">\n       <div class=\"header\">\n         <memory-header></memory-header>\n       </div>  \n       <div class=\"main\">\n         <memory-board .items=\"${this.items}\"></memory-board>\n       </div>  \n       <div class=\"footer\">\n         <memory-footer></memory-footer>\n       </div>\n     </div>\n    `;\n  }\n\n  /**\n   * Formats a greeting\n   * @param name The name to say \"Hello\" to\n   */\n  sayHello(name: string): string {\n    return `Hello, ${name}`;\n  }\n\n  constructor() {\n    super();\n    this.items = cardCollecction as Array<Card>;\n  }\n\n  protected override createRenderRoot() {\n    return this;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'memory-game': Game;\n  }\n}\n"]}