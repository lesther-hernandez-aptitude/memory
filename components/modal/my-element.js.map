{"version":3,"file":"my-element.js","sourceRoot":"","sources":["../../src/components/modal/my-element.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;;;;;;AAEH,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAE1D;;;;;;GAMG;AAEH,IAAa,SAAS,GAAtB,MAAa,SAAU,SAAQ,UAAU;IAAzC;;QAGE;;WAEG;QAEH,SAAI,GAAG,OAAO,CAAC;IASjB,CAAC;IAPU,MAAM;QACb,OAAO,IAAI,CAAA,EAAE,CAAC;IAChB,CAAC;IAEkB,gBAAgB;QACjC,OAAO,IAAI,CAAC;IACd,CAAC;CACF,CAAA;AAfiB,gBAAM,GAAG,GAAG,CAAA,EAAG,CAAA;AAM/B;IADC,QAAQ,EAAE;uCACI;AAPJ,SAAS;IADrB,aAAa,CAAC,YAAY,CAAC;GACf,SAAS,CAgBrB;SAhBY,SAAS","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {LitElement, html, css} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\n\n/**\n * An example element.\n *\n * @fires count-changed - Indicates when the count changes\n * @slot - This element has a slot\n * @csspart button - The button\n */\n@customElement('my-element')\nexport class MyElement extends LitElement {\n  static override styles = css``;\n\n  /**\n   * The name to say \"Hello\" to.\n   */\n  @property()\n  name = 'World';\n\n  override render() {\n    return html``;\n  }\n\n  protected override createRenderRoot() {\n    return this;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'my-element': MyElement;\n  }\n}\n"]}